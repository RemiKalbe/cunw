name: Publish to crate.io and GitHub Release

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build Binary
        run: cargo build --release
      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.os }}
          path: target/release/${{ github.event.repository.name }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo login ${CARGO_REGISTRY_TOKEN}
          cargo publish
      - name: Download Binaries
        uses: actions/download-artifact@v3
      - name: Rename Binaries
        run: |
          mv binary-ubuntu-latest/${{ github.event.repository.name }} ${{ github.event.repository.name }}-linux
          mv binary-windows-latest/${{ github.event.repository.name }}.exe ${{ github.event.repository.name }}-windows.exe
          mv binary-macos-latest/${{ github.event.repository.name }} ${{ github.event.repository.name }}-macos
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ inputs.version }} \
            --title "Release ${{ inputs.version }}" \
            --generate-notes \
            ${{ github.event.repository.name }}-linux \
            ${{ github.event.repository.name }}-windows.exe \
            ${{ github.event.repository.name }}-macos
